// source: events.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.api_pb.JailEvent', null, global);
goog.exportSymbol('proto.api_pb.OrderExpiredEvent', null, global);
goog.exportSymbol('proto.api_pb.RemoveCandidateEvent', null, global);
goog.exportSymbol('proto.api_pb.RewardEvent', null, global);
goog.exportSymbol('proto.api_pb.RewardEvent.Role', null, global);
goog.exportSymbol('proto.api_pb.SlashEvent', null, global);
goog.exportSymbol('proto.api_pb.StakeKickEvent', null, global);
goog.exportSymbol('proto.api_pb.StakeMoveEvent', null, global);
goog.exportSymbol('proto.api_pb.UnbondEvent', null, global);
goog.exportSymbol('proto.api_pb.UnlockEvent', null, global);
goog.exportSymbol('proto.api_pb.UpdateCommissionsEvent', null, global);
goog.exportSymbol('proto.api_pb.UpdateNetworkEvent', null, global);
goog.exportSymbol('proto.api_pb.UpdatedBlockRewardEvent', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_pb.JailEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_pb.JailEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_pb.JailEvent.displayName = 'proto.api_pb.JailEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_pb.RemoveCandidateEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_pb.RemoveCandidateEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_pb.RemoveCandidateEvent.displayName = 'proto.api_pb.RemoveCandidateEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_pb.RewardEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_pb.RewardEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_pb.RewardEvent.displayName = 'proto.api_pb.RewardEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_pb.SlashEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_pb.SlashEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_pb.SlashEvent.displayName = 'proto.api_pb.SlashEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_pb.UnbondEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_pb.UnbondEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_pb.UnbondEvent.displayName = 'proto.api_pb.UnbondEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_pb.StakeKickEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_pb.StakeKickEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_pb.StakeKickEvent.displayName = 'proto.api_pb.StakeKickEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_pb.UpdateNetworkEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_pb.UpdateNetworkEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_pb.UpdateNetworkEvent.displayName = 'proto.api_pb.UpdateNetworkEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_pb.UpdateCommissionsEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_pb.UpdateCommissionsEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_pb.UpdateCommissionsEvent.displayName = 'proto.api_pb.UpdateCommissionsEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_pb.OrderExpiredEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_pb.OrderExpiredEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_pb.OrderExpiredEvent.displayName = 'proto.api_pb.OrderExpiredEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_pb.UpdatedBlockRewardEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_pb.UpdatedBlockRewardEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_pb.UpdatedBlockRewardEvent.displayName = 'proto.api_pb.UpdatedBlockRewardEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_pb.StakeMoveEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_pb.StakeMoveEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_pb.StakeMoveEvent.displayName = 'proto.api_pb.StakeMoveEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_pb.UnlockEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_pb.UnlockEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_pb.UnlockEvent.displayName = 'proto.api_pb.UnlockEvent';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_pb.JailEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api_pb.JailEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_pb.JailEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.JailEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    validatorPubKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    jailedUntil: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_pb.JailEvent}
 */
proto.api_pb.JailEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_pb.JailEvent;
  return proto.api_pb.JailEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_pb.JailEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_pb.JailEvent}
 */
proto.api_pb.JailEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorPubKey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setJailedUntil(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_pb.JailEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_pb.JailEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_pb.JailEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.JailEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorPubKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getJailedUntil();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string validator_pub_key = 1;
 * @return {string}
 */
proto.api_pb.JailEvent.prototype.getValidatorPubKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.JailEvent} returns this
 */
proto.api_pb.JailEvent.prototype.setValidatorPubKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 jailed_until = 2;
 * @return {number}
 */
proto.api_pb.JailEvent.prototype.getJailedUntil = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_pb.JailEvent} returns this
 */
proto.api_pb.JailEvent.prototype.setJailedUntil = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_pb.RemoveCandidateEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api_pb.RemoveCandidateEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_pb.RemoveCandidateEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.RemoveCandidateEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    candidatePubKey: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_pb.RemoveCandidateEvent}
 */
proto.api_pb.RemoveCandidateEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_pb.RemoveCandidateEvent;
  return proto.api_pb.RemoveCandidateEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_pb.RemoveCandidateEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_pb.RemoveCandidateEvent}
 */
proto.api_pb.RemoveCandidateEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCandidatePubKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_pb.RemoveCandidateEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_pb.RemoveCandidateEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_pb.RemoveCandidateEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.RemoveCandidateEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCandidatePubKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string candidate_pub_key = 1;
 * @return {string}
 */
proto.api_pb.RemoveCandidateEvent.prototype.getCandidatePubKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.RemoveCandidateEvent} returns this
 */
proto.api_pb.RemoveCandidateEvent.prototype.setCandidatePubKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_pb.RewardEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api_pb.RewardEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_pb.RewardEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.RewardEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    role: jspb.Message.getFieldWithDefault(msg, 1, 0),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 3, ""),
    validatorPubKey: jspb.Message.getFieldWithDefault(msg, 4, ""),
    forCoin: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_pb.RewardEvent}
 */
proto.api_pb.RewardEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_pb.RewardEvent;
  return proto.api_pb.RewardEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_pb.RewardEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_pb.RewardEvent}
 */
proto.api_pb.RewardEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.api_pb.RewardEvent.Role} */ (reader.readEnum());
      msg.setRole(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorPubKey(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setForCoin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_pb.RewardEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_pb.RewardEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_pb.RewardEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.RewardEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRole();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getValidatorPubKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getForCoin();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.api_pb.RewardEvent.Role = {
  VALIDATOR: 0,
  DELEGATOR: 1,
  DAO: 2,
  DEVELOPERS: 3
};

/**
 * optional Role role = 1;
 * @return {!proto.api_pb.RewardEvent.Role}
 */
proto.api_pb.RewardEvent.prototype.getRole = function() {
  return /** @type {!proto.api_pb.RewardEvent.Role} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.api_pb.RewardEvent.Role} value
 * @return {!proto.api_pb.RewardEvent} returns this
 */
proto.api_pb.RewardEvent.prototype.setRole = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.api_pb.RewardEvent.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.RewardEvent} returns this
 */
proto.api_pb.RewardEvent.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string amount = 3;
 * @return {string}
 */
proto.api_pb.RewardEvent.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.RewardEvent} returns this
 */
proto.api_pb.RewardEvent.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string validator_pub_key = 4;
 * @return {string}
 */
proto.api_pb.RewardEvent.prototype.getValidatorPubKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.RewardEvent} returns this
 */
proto.api_pb.RewardEvent.prototype.setValidatorPubKey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 for_coin = 6;
 * @return {number}
 */
proto.api_pb.RewardEvent.prototype.getForCoin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_pb.RewardEvent} returns this
 */
proto.api_pb.RewardEvent.prototype.setForCoin = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_pb.SlashEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api_pb.SlashEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_pb.SlashEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.SlashEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    coin: jspb.Message.getFieldWithDefault(msg, 3, 0),
    validatorPubKey: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_pb.SlashEvent}
 */
proto.api_pb.SlashEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_pb.SlashEvent;
  return proto.api_pb.SlashEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_pb.SlashEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_pb.SlashEvent}
 */
proto.api_pb.SlashEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCoin(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorPubKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_pb.SlashEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_pb.SlashEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_pb.SlashEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.SlashEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCoin();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getValidatorPubKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.api_pb.SlashEvent.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.SlashEvent} returns this
 */
proto.api_pb.SlashEvent.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.api_pb.SlashEvent.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.SlashEvent} returns this
 */
proto.api_pb.SlashEvent.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 coin = 3;
 * @return {number}
 */
proto.api_pb.SlashEvent.prototype.getCoin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_pb.SlashEvent} returns this
 */
proto.api_pb.SlashEvent.prototype.setCoin = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string validator_pub_key = 4;
 * @return {string}
 */
proto.api_pb.SlashEvent.prototype.getValidatorPubKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.SlashEvent} returns this
 */
proto.api_pb.SlashEvent.prototype.setValidatorPubKey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_pb.UnbondEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api_pb.UnbondEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_pb.UnbondEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.UnbondEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    coin: jspb.Message.getFieldWithDefault(msg, 3, 0),
    validatorPubKey: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_pb.UnbondEvent}
 */
proto.api_pb.UnbondEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_pb.UnbondEvent;
  return proto.api_pb.UnbondEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_pb.UnbondEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_pb.UnbondEvent}
 */
proto.api_pb.UnbondEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCoin(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorPubKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_pb.UnbondEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_pb.UnbondEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_pb.UnbondEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.UnbondEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCoin();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getValidatorPubKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.api_pb.UnbondEvent.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UnbondEvent} returns this
 */
proto.api_pb.UnbondEvent.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.api_pb.UnbondEvent.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UnbondEvent} returns this
 */
proto.api_pb.UnbondEvent.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 coin = 3;
 * @return {number}
 */
proto.api_pb.UnbondEvent.prototype.getCoin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_pb.UnbondEvent} returns this
 */
proto.api_pb.UnbondEvent.prototype.setCoin = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string validator_pub_key = 4;
 * @return {string}
 */
proto.api_pb.UnbondEvent.prototype.getValidatorPubKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UnbondEvent} returns this
 */
proto.api_pb.UnbondEvent.prototype.setValidatorPubKey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_pb.StakeKickEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api_pb.StakeKickEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_pb.StakeKickEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.StakeKickEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    coin: jspb.Message.getFieldWithDefault(msg, 3, 0),
    validatorPubKey: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_pb.StakeKickEvent}
 */
proto.api_pb.StakeKickEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_pb.StakeKickEvent;
  return proto.api_pb.StakeKickEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_pb.StakeKickEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_pb.StakeKickEvent}
 */
proto.api_pb.StakeKickEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCoin(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorPubKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_pb.StakeKickEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_pb.StakeKickEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_pb.StakeKickEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.StakeKickEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCoin();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getValidatorPubKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.api_pb.StakeKickEvent.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.StakeKickEvent} returns this
 */
proto.api_pb.StakeKickEvent.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.api_pb.StakeKickEvent.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.StakeKickEvent} returns this
 */
proto.api_pb.StakeKickEvent.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 coin = 3;
 * @return {number}
 */
proto.api_pb.StakeKickEvent.prototype.getCoin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_pb.StakeKickEvent} returns this
 */
proto.api_pb.StakeKickEvent.prototype.setCoin = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string validator_pub_key = 4;
 * @return {string}
 */
proto.api_pb.StakeKickEvent.prototype.getValidatorPubKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.StakeKickEvent} returns this
 */
proto.api_pb.StakeKickEvent.prototype.setValidatorPubKey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_pb.UpdateNetworkEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api_pb.UpdateNetworkEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_pb.UpdateNetworkEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.UpdateNetworkEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_pb.UpdateNetworkEvent}
 */
proto.api_pb.UpdateNetworkEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_pb.UpdateNetworkEvent;
  return proto.api_pb.UpdateNetworkEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_pb.UpdateNetworkEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_pb.UpdateNetworkEvent}
 */
proto.api_pb.UpdateNetworkEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_pb.UpdateNetworkEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_pb.UpdateNetworkEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_pb.UpdateNetworkEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.UpdateNetworkEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.api_pb.UpdateNetworkEvent.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateNetworkEvent} returns this
 */
proto.api_pb.UpdateNetworkEvent.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api_pb.UpdateCommissionsEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_pb.UpdateCommissionsEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.UpdateCommissionsEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    coin: jspb.Message.getFieldWithDefault(msg, 3, 0),
    payloadByte: jspb.Message.getFieldWithDefault(msg, 4, ""),
    send: jspb.Message.getFieldWithDefault(msg, 5, ""),
    buyBancor: jspb.Message.getFieldWithDefault(msg, 38, ""),
    sellBancor: jspb.Message.getFieldWithDefault(msg, 39, ""),
    sellAllBancor: jspb.Message.getFieldWithDefault(msg, 40, ""),
    buyPoolBase: jspb.Message.getFieldWithDefault(msg, 41, ""),
    buyPoolDelta: jspb.Message.getFieldWithDefault(msg, 53, ""),
    sellPoolBase: jspb.Message.getFieldWithDefault(msg, 42, ""),
    sellPoolDelta: jspb.Message.getFieldWithDefault(msg, 54, ""),
    sellAllPoolBase: jspb.Message.getFieldWithDefault(msg, 43, ""),
    sellAllPoolDelta: jspb.Message.getFieldWithDefault(msg, 55, ""),
    createTicker3: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createTicker4: jspb.Message.getFieldWithDefault(msg, 8, ""),
    createTicker5: jspb.Message.getFieldWithDefault(msg, 9, ""),
    createTicker6: jspb.Message.getFieldWithDefault(msg, 10, ""),
    createTicker710: jspb.Message.getFieldWithDefault(msg, 11, ""),
    createCoin: jspb.Message.getFieldWithDefault(msg, 34, ""),
    createToken: jspb.Message.getFieldWithDefault(msg, 35, ""),
    recreateCoin: jspb.Message.getFieldWithDefault(msg, 36, ""),
    recreateToken: jspb.Message.getFieldWithDefault(msg, 37, ""),
    declareCandidacy: jspb.Message.getFieldWithDefault(msg, 13, ""),
    delegate: jspb.Message.getFieldWithDefault(msg, 14, ""),
    unbond: jspb.Message.getFieldWithDefault(msg, 15, ""),
    redeemCheck: jspb.Message.getFieldWithDefault(msg, 16, ""),
    setCandidateOn: jspb.Message.getFieldWithDefault(msg, 44, ""),
    setCandidateOff: jspb.Message.getFieldWithDefault(msg, 45, ""),
    createMultisig: jspb.Message.getFieldWithDefault(msg, 18, ""),
    multisendBase: jspb.Message.getFieldWithDefault(msg, 51, ""),
    multisendDelta: jspb.Message.getFieldWithDefault(msg, 52, ""),
    editCandidate: jspb.Message.getFieldWithDefault(msg, 20, ""),
    setHaltBlock: jspb.Message.getFieldWithDefault(msg, 21, ""),
    editTickerOwner: jspb.Message.getFieldWithDefault(msg, 22, ""),
    editMultisig: jspb.Message.getFieldWithDefault(msg, 23, ""),
    editCandidatePublicKey: jspb.Message.getFieldWithDefault(msg, 25, ""),
    createSwapPool: jspb.Message.getFieldWithDefault(msg, 48, ""),
    addLiquidity: jspb.Message.getFieldWithDefault(msg, 49, ""),
    removeLiquidity: jspb.Message.getFieldWithDefault(msg, 50, ""),
    editCandidateCommission: jspb.Message.getFieldWithDefault(msg, 28, ""),
    mintToken: jspb.Message.getFieldWithDefault(msg, 46, ""),
    burnToken: jspb.Message.getFieldWithDefault(msg, 47, ""),
    voteCommission: jspb.Message.getFieldWithDefault(msg, 31, ""),
    voteUpdate: jspb.Message.getFieldWithDefault(msg, 32, ""),
    failedTx: jspb.Message.getFieldWithDefault(msg, 56, ""),
    addLimitOrder: jspb.Message.getFieldWithDefault(msg, 57, ""),
    removeLimitOrder: jspb.Message.getFieldWithDefault(msg, 58, ""),
    moveStake: jspb.Message.getFieldWithDefault(msg, 59, ""),
    lockStake: jspb.Message.getFieldWithDefault(msg, 60, ""),
    lock: jspb.Message.getFieldWithDefault(msg, 61, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_pb.UpdateCommissionsEvent}
 */
proto.api_pb.UpdateCommissionsEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_pb.UpdateCommissionsEvent;
  return proto.api_pb.UpdateCommissionsEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_pb.UpdateCommissionsEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_pb.UpdateCommissionsEvent}
 */
proto.api_pb.UpdateCommissionsEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCoin(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayloadByte(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSend(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyBancor(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setSellBancor(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setSellAllBancor(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyPoolBase(value);
      break;
    case 53:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuyPoolDelta(value);
      break;
    case 42:
      var value = /** @type {string} */ (reader.readString());
      msg.setSellPoolBase(value);
      break;
    case 54:
      var value = /** @type {string} */ (reader.readString());
      msg.setSellPoolDelta(value);
      break;
    case 43:
      var value = /** @type {string} */ (reader.readString());
      msg.setSellAllPoolBase(value);
      break;
    case 55:
      var value = /** @type {string} */ (reader.readString());
      msg.setSellAllPoolDelta(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateTicker3(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateTicker4(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateTicker5(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateTicker6(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateTicker710(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateCoin(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateToken(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecreateCoin(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecreateToken(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeclareCandidacy(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegate(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnbond(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedeemCheck(value);
      break;
    case 44:
      var value = /** @type {string} */ (reader.readString());
      msg.setSetCandidateOn(value);
      break;
    case 45:
      var value = /** @type {string} */ (reader.readString());
      msg.setSetCandidateOff(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateMultisig(value);
      break;
    case 51:
      var value = /** @type {string} */ (reader.readString());
      msg.setMultisendBase(value);
      break;
    case 52:
      var value = /** @type {string} */ (reader.readString());
      msg.setMultisendDelta(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setEditCandidate(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setSetHaltBlock(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setEditTickerOwner(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setEditMultisig(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setEditCandidatePublicKey(value);
      break;
    case 48:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateSwapPool(value);
      break;
    case 49:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddLiquidity(value);
      break;
    case 50:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoveLiquidity(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setEditCandidateCommission(value);
      break;
    case 46:
      var value = /** @type {string} */ (reader.readString());
      msg.setMintToken(value);
      break;
    case 47:
      var value = /** @type {string} */ (reader.readString());
      msg.setBurnToken(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setVoteCommission(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setVoteUpdate(value);
      break;
    case 56:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailedTx(value);
      break;
    case 57:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddLimitOrder(value);
      break;
    case 58:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemoveLimitOrder(value);
      break;
    case 59:
      var value = /** @type {string} */ (reader.readString());
      msg.setMoveStake(value);
      break;
    case 60:
      var value = /** @type {string} */ (reader.readString());
      msg.setLockStake(value);
      break;
    case 61:
      var value = /** @type {string} */ (reader.readString());
      msg.setLock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_pb.UpdateCommissionsEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_pb.UpdateCommissionsEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.UpdateCommissionsEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCoin();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getPayloadByte();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSend();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBuyBancor();
  if (f.length > 0) {
    writer.writeString(
      38,
      f
    );
  }
  f = message.getSellBancor();
  if (f.length > 0) {
    writer.writeString(
      39,
      f
    );
  }
  f = message.getSellAllBancor();
  if (f.length > 0) {
    writer.writeString(
      40,
      f
    );
  }
  f = message.getBuyPoolBase();
  if (f.length > 0) {
    writer.writeString(
      41,
      f
    );
  }
  f = message.getBuyPoolDelta();
  if (f.length > 0) {
    writer.writeString(
      53,
      f
    );
  }
  f = message.getSellPoolBase();
  if (f.length > 0) {
    writer.writeString(
      42,
      f
    );
  }
  f = message.getSellPoolDelta();
  if (f.length > 0) {
    writer.writeString(
      54,
      f
    );
  }
  f = message.getSellAllPoolBase();
  if (f.length > 0) {
    writer.writeString(
      43,
      f
    );
  }
  f = message.getSellAllPoolDelta();
  if (f.length > 0) {
    writer.writeString(
      55,
      f
    );
  }
  f = message.getCreateTicker3();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreateTicker4();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCreateTicker5();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCreateTicker6();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCreateTicker710();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCreateCoin();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getCreateToken();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getRecreateCoin();
  if (f.length > 0) {
    writer.writeString(
      36,
      f
    );
  }
  f = message.getRecreateToken();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getDeclareCandidacy();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getDelegate();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getUnbond();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getRedeemCheck();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getSetCandidateOn();
  if (f.length > 0) {
    writer.writeString(
      44,
      f
    );
  }
  f = message.getSetCandidateOff();
  if (f.length > 0) {
    writer.writeString(
      45,
      f
    );
  }
  f = message.getCreateMultisig();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getMultisendBase();
  if (f.length > 0) {
    writer.writeString(
      51,
      f
    );
  }
  f = message.getMultisendDelta();
  if (f.length > 0) {
    writer.writeString(
      52,
      f
    );
  }
  f = message.getEditCandidate();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getSetHaltBlock();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getEditTickerOwner();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getEditMultisig();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getEditCandidatePublicKey();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getCreateSwapPool();
  if (f.length > 0) {
    writer.writeString(
      48,
      f
    );
  }
  f = message.getAddLiquidity();
  if (f.length > 0) {
    writer.writeString(
      49,
      f
    );
  }
  f = message.getRemoveLiquidity();
  if (f.length > 0) {
    writer.writeString(
      50,
      f
    );
  }
  f = message.getEditCandidateCommission();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getMintToken();
  if (f.length > 0) {
    writer.writeString(
      46,
      f
    );
  }
  f = message.getBurnToken();
  if (f.length > 0) {
    writer.writeString(
      47,
      f
    );
  }
  f = message.getVoteCommission();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getVoteUpdate();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getFailedTx();
  if (f.length > 0) {
    writer.writeString(
      56,
      f
    );
  }
  f = message.getAddLimitOrder();
  if (f.length > 0) {
    writer.writeString(
      57,
      f
    );
  }
  f = message.getRemoveLimitOrder();
  if (f.length > 0) {
    writer.writeString(
      58,
      f
    );
  }
  f = message.getMoveStake();
  if (f.length > 0) {
    writer.writeString(
      59,
      f
    );
  }
  f = message.getLockStake();
  if (f.length > 0) {
    writer.writeString(
      60,
      f
    );
  }
  f = message.getLock();
  if (f.length > 0) {
    writer.writeString(
      61,
      f
    );
  }
};


/**
 * optional uint64 coin = 3;
 * @return {number}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getCoin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setCoin = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string payload_byte = 4;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getPayloadByte = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setPayloadByte = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string send = 5;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getSend = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setSend = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string buy_bancor = 38;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getBuyBancor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setBuyBancor = function(value) {
  return jspb.Message.setProto3StringField(this, 38, value);
};


/**
 * optional string sell_bancor = 39;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getSellBancor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setSellBancor = function(value) {
  return jspb.Message.setProto3StringField(this, 39, value);
};


/**
 * optional string sell_all_bancor = 40;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getSellAllBancor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setSellAllBancor = function(value) {
  return jspb.Message.setProto3StringField(this, 40, value);
};


/**
 * optional string buy_pool_base = 41;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getBuyPoolBase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setBuyPoolBase = function(value) {
  return jspb.Message.setProto3StringField(this, 41, value);
};


/**
 * optional string buy_pool_delta = 53;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getBuyPoolDelta = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 53, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setBuyPoolDelta = function(value) {
  return jspb.Message.setProto3StringField(this, 53, value);
};


/**
 * optional string sell_pool_base = 42;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getSellPoolBase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 42, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setSellPoolBase = function(value) {
  return jspb.Message.setProto3StringField(this, 42, value);
};


/**
 * optional string sell_pool_delta = 54;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getSellPoolDelta = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 54, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setSellPoolDelta = function(value) {
  return jspb.Message.setProto3StringField(this, 54, value);
};


/**
 * optional string sell_all_pool_base = 43;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getSellAllPoolBase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 43, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setSellAllPoolBase = function(value) {
  return jspb.Message.setProto3StringField(this, 43, value);
};


/**
 * optional string sell_all_pool_delta = 55;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getSellAllPoolDelta = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 55, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setSellAllPoolDelta = function(value) {
  return jspb.Message.setProto3StringField(this, 55, value);
};


/**
 * optional string create_ticker3 = 7;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getCreateTicker3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setCreateTicker3 = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string create_ticker4 = 8;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getCreateTicker4 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setCreateTicker4 = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string create_ticker5 = 9;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getCreateTicker5 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setCreateTicker5 = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string create_ticker6 = 10;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getCreateTicker6 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setCreateTicker6 = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string create_ticker7_10 = 11;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getCreateTicker710 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setCreateTicker710 = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string create_coin = 34;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getCreateCoin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setCreateCoin = function(value) {
  return jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional string create_token = 35;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getCreateToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setCreateToken = function(value) {
  return jspb.Message.setProto3StringField(this, 35, value);
};


/**
 * optional string recreate_coin = 36;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getRecreateCoin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setRecreateCoin = function(value) {
  return jspb.Message.setProto3StringField(this, 36, value);
};


/**
 * optional string recreate_token = 37;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getRecreateToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setRecreateToken = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional string declare_candidacy = 13;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getDeclareCandidacy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setDeclareCandidacy = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string delegate = 14;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getDelegate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setDelegate = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string unbond = 15;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getUnbond = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setUnbond = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string redeem_check = 16;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getRedeemCheck = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setRedeemCheck = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string set_candidate_on = 44;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getSetCandidateOn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 44, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setSetCandidateOn = function(value) {
  return jspb.Message.setProto3StringField(this, 44, value);
};


/**
 * optional string set_candidate_off = 45;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getSetCandidateOff = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 45, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setSetCandidateOff = function(value) {
  return jspb.Message.setProto3StringField(this, 45, value);
};


/**
 * optional string create_multisig = 18;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getCreateMultisig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setCreateMultisig = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string multisend_base = 51;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getMultisendBase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 51, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setMultisendBase = function(value) {
  return jspb.Message.setProto3StringField(this, 51, value);
};


/**
 * optional string multisend_delta = 52;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getMultisendDelta = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 52, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setMultisendDelta = function(value) {
  return jspb.Message.setProto3StringField(this, 52, value);
};


/**
 * optional string edit_candidate = 20;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getEditCandidate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setEditCandidate = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string set_halt_block = 21;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getSetHaltBlock = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setSetHaltBlock = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string edit_ticker_owner = 22;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getEditTickerOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setEditTickerOwner = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string edit_multisig = 23;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getEditMultisig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setEditMultisig = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string edit_candidate_public_key = 25;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getEditCandidatePublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setEditCandidatePublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string create_swap_pool = 48;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getCreateSwapPool = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 48, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setCreateSwapPool = function(value) {
  return jspb.Message.setProto3StringField(this, 48, value);
};


/**
 * optional string add_liquidity = 49;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getAddLiquidity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 49, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setAddLiquidity = function(value) {
  return jspb.Message.setProto3StringField(this, 49, value);
};


/**
 * optional string remove_liquidity = 50;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getRemoveLiquidity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 50, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setRemoveLiquidity = function(value) {
  return jspb.Message.setProto3StringField(this, 50, value);
};


/**
 * optional string edit_candidate_commission = 28;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getEditCandidateCommission = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setEditCandidateCommission = function(value) {
  return jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional string mint_token = 46;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getMintToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 46, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setMintToken = function(value) {
  return jspb.Message.setProto3StringField(this, 46, value);
};


/**
 * optional string burn_token = 47;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getBurnToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 47, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setBurnToken = function(value) {
  return jspb.Message.setProto3StringField(this, 47, value);
};


/**
 * optional string vote_commission = 31;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getVoteCommission = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setVoteCommission = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string vote_update = 32;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getVoteUpdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setVoteUpdate = function(value) {
  return jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional string failed_tx = 56;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getFailedTx = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 56, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setFailedTx = function(value) {
  return jspb.Message.setProto3StringField(this, 56, value);
};


/**
 * optional string add_limit_order = 57;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getAddLimitOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 57, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setAddLimitOrder = function(value) {
  return jspb.Message.setProto3StringField(this, 57, value);
};


/**
 * optional string remove_limit_order = 58;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getRemoveLimitOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 58, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setRemoveLimitOrder = function(value) {
  return jspb.Message.setProto3StringField(this, 58, value);
};


/**
 * optional string move_stake = 59;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getMoveStake = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 59, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setMoveStake = function(value) {
  return jspb.Message.setProto3StringField(this, 59, value);
};


/**
 * optional string lock_stake = 60;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getLockStake = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 60, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setLockStake = function(value) {
  return jspb.Message.setProto3StringField(this, 60, value);
};


/**
 * optional string lock = 61;
 * @return {string}
 */
proto.api_pb.UpdateCommissionsEvent.prototype.getLock = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 61, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdateCommissionsEvent} returns this
 */
proto.api_pb.UpdateCommissionsEvent.prototype.setLock = function(value) {
  return jspb.Message.setProto3StringField(this, 61, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_pb.OrderExpiredEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api_pb.OrderExpiredEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_pb.OrderExpiredEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.OrderExpiredEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    coin: jspb.Message.getFieldWithDefault(msg, 3, 0),
    amount: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_pb.OrderExpiredEvent}
 */
proto.api_pb.OrderExpiredEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_pb.OrderExpiredEvent;
  return proto.api_pb.OrderExpiredEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_pb.OrderExpiredEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_pb.OrderExpiredEvent}
 */
proto.api_pb.OrderExpiredEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCoin(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_pb.OrderExpiredEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_pb.OrderExpiredEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_pb.OrderExpiredEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.OrderExpiredEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCoin();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.api_pb.OrderExpiredEvent.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_pb.OrderExpiredEvent} returns this
 */
proto.api_pb.OrderExpiredEvent.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.api_pb.OrderExpiredEvent.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.OrderExpiredEvent} returns this
 */
proto.api_pb.OrderExpiredEvent.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 coin = 3;
 * @return {number}
 */
proto.api_pb.OrderExpiredEvent.prototype.getCoin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_pb.OrderExpiredEvent} returns this
 */
proto.api_pb.OrderExpiredEvent.prototype.setCoin = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string amount = 4;
 * @return {string}
 */
proto.api_pb.OrderExpiredEvent.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.OrderExpiredEvent} returns this
 */
proto.api_pb.OrderExpiredEvent.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_pb.UpdatedBlockRewardEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api_pb.UpdatedBlockRewardEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_pb.UpdatedBlockRewardEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.UpdatedBlockRewardEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getFieldWithDefault(msg, 1, ""),
    valueLockedStakeRewards: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_pb.UpdatedBlockRewardEvent}
 */
proto.api_pb.UpdatedBlockRewardEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_pb.UpdatedBlockRewardEvent;
  return proto.api_pb.UpdatedBlockRewardEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_pb.UpdatedBlockRewardEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_pb.UpdatedBlockRewardEvent}
 */
proto.api_pb.UpdatedBlockRewardEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueLockedStakeRewards(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_pb.UpdatedBlockRewardEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_pb.UpdatedBlockRewardEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_pb.UpdatedBlockRewardEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.UpdatedBlockRewardEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValueLockedStakeRewards();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string value = 1;
 * @return {string}
 */
proto.api_pb.UpdatedBlockRewardEvent.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdatedBlockRewardEvent} returns this
 */
proto.api_pb.UpdatedBlockRewardEvent.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value_locked_stake_rewards = 2;
 * @return {string}
 */
proto.api_pb.UpdatedBlockRewardEvent.prototype.getValueLockedStakeRewards = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UpdatedBlockRewardEvent} returns this
 */
proto.api_pb.UpdatedBlockRewardEvent.prototype.setValueLockedStakeRewards = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_pb.StakeMoveEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api_pb.StakeMoveEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_pb.StakeMoveEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.StakeMoveEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    coin: jspb.Message.getFieldWithDefault(msg, 3, 0),
    candidatePubKey: jspb.Message.getFieldWithDefault(msg, 4, ""),
    toCandidatePubKey: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_pb.StakeMoveEvent}
 */
proto.api_pb.StakeMoveEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_pb.StakeMoveEvent;
  return proto.api_pb.StakeMoveEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_pb.StakeMoveEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_pb.StakeMoveEvent}
 */
proto.api_pb.StakeMoveEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCoin(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCandidatePubKey(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setToCandidatePubKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_pb.StakeMoveEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_pb.StakeMoveEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_pb.StakeMoveEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.StakeMoveEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCoin();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getCandidatePubKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getToCandidatePubKey();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.api_pb.StakeMoveEvent.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.StakeMoveEvent} returns this
 */
proto.api_pb.StakeMoveEvent.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.api_pb.StakeMoveEvent.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.StakeMoveEvent} returns this
 */
proto.api_pb.StakeMoveEvent.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 coin = 3;
 * @return {number}
 */
proto.api_pb.StakeMoveEvent.prototype.getCoin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_pb.StakeMoveEvent} returns this
 */
proto.api_pb.StakeMoveEvent.prototype.setCoin = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string candidate_pub_key = 4;
 * @return {string}
 */
proto.api_pb.StakeMoveEvent.prototype.getCandidatePubKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.StakeMoveEvent} returns this
 */
proto.api_pb.StakeMoveEvent.prototype.setCandidatePubKey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string to_candidate_pub_key = 5;
 * @return {string}
 */
proto.api_pb.StakeMoveEvent.prototype.getToCandidatePubKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.StakeMoveEvent} returns this
 */
proto.api_pb.StakeMoveEvent.prototype.setToCandidatePubKey = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_pb.UnlockEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.api_pb.UnlockEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_pb.UnlockEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.UnlockEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    coin: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_pb.UnlockEvent}
 */
proto.api_pb.UnlockEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_pb.UnlockEvent;
  return proto.api_pb.UnlockEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_pb.UnlockEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_pb.UnlockEvent}
 */
proto.api_pb.UnlockEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCoin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_pb.UnlockEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_pb.UnlockEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_pb.UnlockEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_pb.UnlockEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCoin();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.api_pb.UnlockEvent.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UnlockEvent} returns this
 */
proto.api_pb.UnlockEvent.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.api_pb.UnlockEvent.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.api_pb.UnlockEvent} returns this
 */
proto.api_pb.UnlockEvent.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 coin = 3;
 * @return {number}
 */
proto.api_pb.UnlockEvent.prototype.getCoin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.api_pb.UnlockEvent} returns this
 */
proto.api_pb.UnlockEvent.prototype.setCoin = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


goog.object.extend(exports, proto.api_pb);
